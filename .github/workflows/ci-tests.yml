name: ci-tests
on: [push, pull_request]

env:
  CPM_SOURCE_CACHE: ${{ vars.CPM_SOURCE_CACHE }}

jobs:
  configure-check:
    runs-on: ubuntu-latest
    strategy: 
      matrix:
        cmake_version: ['3.21.x', 'latest']
    steps:
      -
        uses: actions/checkout@v4
      - 
        name: Setup cmake
        uses: jwlawson/actions-setup-cmake@v1.14
        with:
          cmake-version: ${{ matrix.cmake_version }}
      -
        uses: actions/cache@v3
        with:
          key: cpm-cache-${{ hashFiles('**/CMakeLists.txt', '**/*.cmake') }}
          path: ${{ vars.CPM_SOURCE_CACHE }}
          enableCrossOsArchive: true
      - 
        name: Configure project
        run: cmake -B ~/fpimpl-build

  tests:
    runs-on: ${{ matrix.compiler.IMAGE }}
    strategy:
      fail-fast: false
      matrix:
        compiler: [
          {IMAGE: 'ubuntu-22.04', CC: gcc-9, CXX: g++-9},
          {IMAGE: 'ubuntu-22.04', CC: gcc-10, CXX: g++-10},
          {IMAGE: 'ubuntu-22.04', CC: gcc-11, CXX: g++-11},
          {IMAGE: 'ubuntu-22.04', CC: gcc-12, CXX: g++-12},
          {IMAGE: 'ubuntu-22.04', CC: gcc-13, CXX: g++-13},

          {IMAGE: 'ubuntu-20.04', CC: clang-10, CXX: clang++-10},
          {IMAGE: 'ubuntu-20.04', CC: clang-11, CXX: clang++-11},
          {IMAGE: 'ubuntu-20.04', CC: clang-12, CXX: clang++-12},
          
          {IMAGE: 'ubuntu-22.04', CC: clang-13, CXX: clang++-13},
          {IMAGE: 'ubuntu-22.04', CC: clang-14, CXX: clang++-14},
          {IMAGE: 'ubuntu-22.04', CC: clang-15, CXX: clang++-15}
        ]
    env:
      CC: ${{ matrix.compiler.CC }}
      CXX: ${{ matrix.compiler.CXX }}
      FPIMPL_BUILD_DIR: ~/fpimpl-build
    steps:
      -
        uses: actions/checkout@v4
      -
        uses: actions/cache@v3
        with:
          key: cpm-cache-${{ hashFiles('**/CMakeLists.txt', '**/*.cmake') }}
          path: ${{ vars.CPM_SOURCE_CACHE }}
          enableCrossOsArchive: true
      - 
        name: Configure project
        run: cmake -B ${{ env.FPIMPL_BUILD_DIR }} -DFPIMPL_BUILD_EXAMPLE=OFF -DFPIMPL_ENABLE_WALL_WERROR=ON
      - 
        name: Build project
        run: cmake --build ${{ env.FPIMPL_BUILD_DIR }} --parallel
      - 
        name: Run tests
        run: ctest --parallel 12 --test-dir ${{ env.FPIMPL_BUILD_DIR }} --no-tests=error --output-on-failure


  
      
    
